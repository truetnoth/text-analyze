// –¢–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è = (–ö–æ–ª-–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–ª–æ–≤ ‚àí –ö–æ–ª-–≤–æ –Ω–µ–≥–∞—Ç–∏–≤—ã—Ö —Å–ª–æ–≤) * 100 / –û–±—â–µ–µ –∫–æ–ª-–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ(–∑–∞ –≤—ã—á–µ—Ç–æ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤)
// –ò –µ—Å–ª–∏ —Ç–æ–Ω < 0, —Ç–æ –±—É–¥–µ—Ç –Ω–∞–¥–ø–∏—Å–∏—å ¬´–¢–æ–Ω —Ç–µ–∫—Å—Ç–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π¬ª, –∞ –µ—Å–ª–∏ —Ç–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è > 0, —Ç–æ ¬´–¢–æ–Ω —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª–µ–Ω¬ª?

take_result.addEventListener("click", () => {
    take_result.innerText = "üëçüèª";
    setTimeout(back, 1000);

    const all_Words = countAllWords(targetText.value);
    const bad_Words = countWords(targetText.value, badWordsVocabulary);
    const good_Words = countWords(targetText.value, goodWordsVocabulary);
    const stop_Words = countWords(targetText.value, stopWordsVocabulary);
    const all_Wo_Stop_Words = all_Words.length - stop_Words;
    const ton = ((good_Words - bad_Words) * 100) / all_Words;

    allWords.innerText = all_Words.length;
    badWords.innerText = bad_Words;
    goodWords.innerText = good_Words;
    stopWords.innerText = stop_Words;
    allWoStopWords.innerText = all_Wo_Stop_Words;
    tonPlaceNumber.innerText = "(" + (Math.round(ton * 100) / 100).toFixed(2) + ")";

    if (ton > 0) {
        tonPlace.innerText = "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π";
    } else tonPlace.innerText = "–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π";
});

// –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ 
targetText.value = localStorage.getItem('targetText');

targetText.oninput = () => {
  localStorage.setItem("targetText", targetText.value);
};
